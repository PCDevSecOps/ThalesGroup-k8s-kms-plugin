syntax = "proto3";

package v1beta1;

option go_package = "github.com/thalescpl-io/k8s-kms-plugin/apis/k8s/v1beta1;k8s";

import "google/protobuf/timestamp.proto";

service KeyManagementService {
  // Version returns the runtime name and runtime version of the KMS provider.
  rpc Version(v1beta1.VersionRequest) returns (VersionResponse);
  // Execute decryption operation in KMS provider.
  rpc Decrypt(DecryptRequest) returns (DecryptResponse);
  // Execute encryption operation in KMS provider.
  rpc Encrypt(EncryptRequest) returns (EncryptResponse);
}

message DecryptRequest {
  // Version of the KMS plugin API.
  string version = 1;
  // The data to be decrypted.
  bytes cipher = 2;
  // Required. The Keyring that is holding the key to use
  string keyring_id = 3;
  // Required. The Key to use
  string key_id = 4;
}

message DecryptResponse {
  // The decrypted data.
  bytes plain = 1;
}

message EncryptRequest {
  // Version of the KMS plugin API.
  string version = 1;
  // The data to be encrypted.
  bytes plain = 2;
  // Required. The Keyring that is holding the key to use
  string keyring_id = 3;
  // Required. The Key to use
  string key_id = 4;
}

message EncryptResponse {
  // The encrypted data.
  bytes cipher = 1;
}

message VersionRequest {
  string version = 1;
}

message VersionResponse {
  string version = 1;
  string runtime_name = 2;
  string runtime_version = 3;
}
